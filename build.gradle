buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "mc${minecraft_version}_v${mod_version}"
group = "mod.grimmauld.${modid}"
archivesBaseName = "${modid}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))


minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                discordchat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                discordchat {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'

            args '--mod', "discordchat", '--all', '--output', file('src/generated/resources/')

            mods {
                discordchat {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    shade
}


shadowJar {
    configurations = [project.configurations.shade]
    relocate 'net.dv8tion.jda', 'mod.grimmauld.discordchat.repack.jda'
    relocate 'com.jagrosh.jdautilities', 'mod.grimmauld.discordchat.repack.jdautils'
    relocate 'gnu.trove', 'mod.grimmauld.discordchat.repack.trove'
    relocate 'org.apache.commons.collections4', 'mod.grimmauld.discordchat.repack.collections'
}

repositories {
    jcenter()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    def jda = "net.dv8tion:JDA:$jda_version"
    def jdautils = "com.jagrosh:jda-utilities:3.0.1"

    implementation jda
    implementation jdautils

    shade jda
    shade jdautils
}

compileJava.options.encoding = 'UTF-8'


jar {
    manifest {
        attributes([
            "Specification-Title": "${modid}",
            "Specification-Vendor": "Grimmauld",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Grimmauld",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

reobf {
    shadowJar {}
}