buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        maven { url='https://dist.creeper.host/Sponge/maven' }
        maven {url='https://repo.spongepowered.org/maven'}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id'com.github.johnrengelman.shadow' version '5.2.0'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "mc${minecraft_version}_v${mod_version}"
group = "mod.grimmauld.${modid}"
archivesBaseName = "${modid}"


java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))


minecraft {
    // mappings channel: 'snapshot', version: '20210309-1.16.5'
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=discordchat.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                discordchat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg '-mixin.config=discordchat.mixins.json'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                discordchat {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    shade
}


shadowJar {
    configurations = [project.configurations.shade]

    relocate 'net.dv8tion.jda', 'mod.grimmauld.discordchat.repack.jda'
    relocate 'gnu.trove', 'mod.grimmauld.discordchat.repack.trove'
    relocate 'okhttp3', 'mod.grimmauld.discordchat.repack.okhttp3'
    relocate 'okio', 'mod.grimmauld.discordchat.repack.okio'
    relocate 'com.therandomlabs.curseapi', 'mod.grimmauld.discordchat.repack.curseapi'
    relocate 'org.apache.commons.collections4', 'mod.grimmauld.discordchat.repack.collections'
    relocate 'org.apache.http', 'mod.grimmauld.discordchat.repack.http'
    relocate 'org.apache.logging', 'mod.grimmauld.discordchat.repack.logging'
    relocate 'org.apache.commons.logging', 'mod.grimmauld.discordchat.repack.commons.logging'
    //  relocate 'org.apache.commons', 'mod.grimmauld.discordchat.repack.commons'
    relocate 'org.codehaus', 'mod.grimmauld.discordchat.repack.codehaus'
    relocate 'org.slf4j', 'mod.grimmauld.discordchat.repack.slf4j'
}

repositories {
    maven {
        url 'https://jitpack.io/'
    }

    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }

    maven {
        url 'https://mvnrepository.com/artifact/'
    }

    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    runtimeOnly fg.deobf("curse.maven:crt-239197:3348521")
    implementation fg.deobf("curse.maven:spark-361579:3337641")

    def curseapi = "com.github.TheRandomLabs:CurseAPI:master-SNAPSHOT"
    def jda = "net.dv8tion:JDA:$jda_version"
    def slf4j = "org.slf4j:slf4j-simple:1.7.25"
    def okhttp = "com.squareup.okhttp3:okhttp:3.13.0"
    def httpcomponents = "org.apache.httpcomponents:httpclient:4.3.3"
    def log4j = "org.apache.logging.log4j:log4j-core:2.11.2"
    def collections = "org.apache.commons:commons-collections4:4.1"
    def commonslogging = "commons-logging:commons-logging:1.1.3"

    implementation jda
    implementation curseapi
    implementation slf4j
    implementation okhttp
    implementation httpcomponents
    implementation log4j
    implementation collections
    implementation commonslogging

    shade jda
    shade curseapi
    shade slf4j
    shade okhttp
    shade httpcomponents
    shade log4j
    shade collections
    shade commonslogging

    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

compileJava.options.encoding = 'UTF-8'

jar {
    manifest {
        attributes([
                "Specification-Title": "${modid}",
                "Specification-Vendor": "Grimmauld",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Grimmauld",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "discordchat.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

reobf {
    shadowJar {}
}

mixin {
    add sourceSets.main, "discordchat.refmap.json"
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

buildConfig {
    buildConfigField 'String', 'MODID', "${modid}"
    buildConfigField "String", "GITHASH", "${getGitHash()}"

    appName = project.name
    version = project.version
    clsName = 'BuildConfig'
    packageName = project.group
    charset = 'UTF-8'
}